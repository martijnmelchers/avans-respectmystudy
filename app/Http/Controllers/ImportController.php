<?php

namespace App\Http\Controllers;

use App\Location;
use App\Minor;
use App\Organisation;

class ImportController extends Controller
{
    public function Minors()
    {
        // KiesOpMaat API format: https://hastebin.com/egiyatugam.xml
        header('content-type: application/json');

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        if (isset($_GET['page']) && $_GET['page'] > 0) {
            $page = "?page=" . $_GET['page'];
        } else {
            $page = "";
        }

        curl_setopt($ch, CURLOPT_URL, "https://www.kiesopmaat.nl/api/public/module/$page");
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

        $headers = array();
        $headers[] = 'Authorization: Token Be6060c3147a74aaec4c15f3531fcc0dcadebe50';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        $php_result = json_decode($result);

        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }

        if (isset($php_result->detail)) {
            echo $result;
            die();
        }

        $errors = array();

        foreach ($php_result->results as $r) {
//            $conn = new mysqli("localhost", "wordques_v3", "CHCrachman", "wordques_kom");
//            $conn->set_charset("utf8");
//
//            if ($conn->query("SELECT * FROM modules WHERE id = $r->id")->num_rows == 0) {
//                $stmt = $conn->prepare("INSERT INTO modules (id, status, name, subject, goals, contacthours, ects, roster, requirements, language, is_commercial, costs, is_published, is_enrollable, organisation) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
//                $stmt->bind_param("iisssddssssdssi", $r->id, $r->status, $r->name, $r->subject, $r->goals, $r->contacthours, $r->ects, $r->roster, $r->requirements, $r->language, $r->is_commercial, $r->costs, $r->is_published, $r->is_enrollable, $r->ownedby_organisation);
//
//                if ($stmt->execute()) {
//                    foreach ($r->locations as $location) {
//                        if ($conn->query("INSERT INTO modules_locations (module_id, location_id) VALUES ($r->id, $location)")) {
////                    echo "IMPORTED";
//                        } else {
//                            $errors[] = json_decode('{"error":"' . $conn->error . '","module_id":' . $r->id . ',"location_id":' . $location . '}');
//                        }
//                    }
//                } else {
//                    $errors[] = json_decode('{"error":"' . $conn->error . '","organization_id":' . $r->ownedby_organisation . ',"name":"' . $r->name . '"}');
//                }
//            } else {
//                $conn->query("DELETE FROM modules_locations WHERE module_id = $r->id");
//
//                foreach ($r->locations as $location) {
//                    if ($conn->query("INSERT INTO modules_locations (module_id, location_id) VALUES ($r->id, $location)")) {
////                echo "IMPORTED";
//                    } else {
////                echo "ERROR: " . $conn->error;
//                    }
//                }
//            }
//
//            if (sizeof($errors) > 0) {
//                $php_result->errors = $errors;
//            }

            $minor = Minor::all()->where('id', $r->id)->first();
            if (isset($minor)) {

            } else {
                $minor = new Minor([
                    "id" => $r->id,
                    "version" => 1,
                    "name" => $r->name,
                    "phonenumber" => "",
                    "email" => "",
                    "kiesopmaat" => $r->id,
                    "ects" => $r->ects,
                    "costs" => $r->costs,
                    "subject" => $r->subject,
                    "goals" => $r->goals,
                    "requirements" => $r->requirements,
                    "examination" => $r->examination,
                    "level" => $r->level,
                    "language" => $r->language,
                    "is_published" => false,
                    "is_enrollable" => false,
                    "organisation_id" => $r->ownedby_organisation,
                ]);
                $minor->save();
                echo json_encode($r, JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE);
            }
        }

        curl_close($ch);
        echo json_encode($php_result);
    }

    public function Organisations()
    {
        // KiesOpMaat API format: https://hastebin.com/ubazezudiq.json
        header('content-type: text/json');

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        if (isset($_GET['page']) && $_GET['page'] > 0) {
            $page = "?page=" . $_GET['page'];
        } else {
            $page = "";
        }

        curl_setopt($ch, CURLOPT_URL, "https://www.kiesopmaat.nl/api/public/organisation/$page");
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

        $headers = array();
        $headers[] = 'Authorization: Token Be6060c3147a74aaec4c15f3531fcc0dcadebe50';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        $php_result = json_decode($result);

        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }

        if (isset($php_result->detail)) {
            echo $result;
            die();
        }

        $errors = array();

        foreach ($php_result->results as $r) {
            $organization = Minor::all()->where('id', $r->id)->first();
            if (isset($organization)) {

            } else {
                $organization = new Organisation([
                    "name"=>$r->name,
                    "email"=>"",
                    "phonenumber"=> "",
                    "location" =>"",
                ]);
                $organization->save();
            }
        }

        curl_close($ch);
        echo $result;
    }

    public function Locations()
    {
        // KiesOpMaat API format: https://hastebin.com/egiyatugam.xml
        header('content-type: application/json');

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        if (isset($_GET['s']) && $_GET['s'] > 0) {
            $i = $_GET['s'] . "/";
        } else {
            $i = "";
        }

        if (isset($_GET['page']) && $_GET['page'] > 0) {
            $page = "?page=" . $_GET['page'];
        } else {
            $page = "";
        }

        curl_setopt($ch, CURLOPT_URL, "https://www.kiesopmaat.nl/api/public/module/$i$page");
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

        $headers = array();
        $headers[] = 'Authorization: Token Be6060c3147a74aaec4c15f3531fcc0dcadebe50';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        $php_result = json_decode($result);

        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }

        if (isset($php_result->detail)) {
            header("Content-type: text/json");
            echo $result;
            die();
        }

        $errors = array();

        foreach ($php_result->results as $r) {
            $location = Location::all()->where('id', $r->id)->first();
            if (isset($location)) {

            } else {
                $location = new Location([
                ]);
                $location->save();
                echo json_encode($r, JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE);
            }
        }

        curl_close($ch);

        header("Content-type: text/json");
//        echo json_encode($php_result);
    }
}
